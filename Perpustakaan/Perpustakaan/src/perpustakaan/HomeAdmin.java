/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan;

import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import java.util.concurrent.TimeUnit;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
/**
 *
 * @author acer_
 */
public class HomeAdmin extends javax.swing.JFrame {
    private Statement st;
    private KoneksiDatabase dbConnection;
    private ResultSet rs;
    private DefaultTableModel getTabelPeminjaman;
    private RequestBukuAdmin reqBukuAdmin = null;
    private Login log = null;
    /**
     * Creates new form TampilkanData
     */
    public HomeAdmin() {
        initComponents();
        setSize(1920, 1080);
        setVisible(true);
        getContentPane().setBackground(new Color(22, 77, 196));
        dbConnection = KoneksiDatabase.getInstance();
        tampilkanData();
        cekRequestData();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        
    }
    
    public static void main(String[] args) {
        new HomeAdmin().show();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tombolLogoutAdmin = new javax.swing.JButton();
        requestPeminjamanBuku = new javax.swing.JButton();
        tombolRefresh = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPeminjaman = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchReqBuku = new javax.swing.JButton();
        searchByNim = new javax.swing.JTextField();
        searchByIDTransaksi = new javax.swing.JTextField();
        tombolAddBuku = new javax.swing.JButton();
        tombolAddBuku1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin - Home Page");
        setMinimumSize(new java.awt.Dimension(1920, 1080));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 51));
        jLabel1.setText("Admin - Home Page");

        tombolLogoutAdmin.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        tombolLogoutAdmin.setText("Logout");
        tombolLogoutAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolLogoutAdminActionPerformed(evt);
            }
        });

        requestPeminjamanBuku.setBackground(new java.awt.Color(0, 204, 204));
        requestPeminjamanBuku.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        requestPeminjamanBuku.setForeground(new java.awt.Color(255, 255, 255));
        requestPeminjamanBuku.setText("Request");
        requestPeminjamanBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestPeminjamanBukuActionPerformed(evt);
            }
        });

        tombolRefresh.setBackground(new java.awt.Color(0, 204, 204));
        tombolRefresh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tombolRefresh.setForeground(new java.awt.Color(255, 255, 255));
        tombolRefresh.setText("Refresh");
        tombolRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolRefreshActionPerformed(evt);
            }
        });

        tabelPeminjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Transaksi", "ID Request", "Nama", "NIM", "ID Buku", "Jumlah ", "T/W Peminjaman", "T/W Pengembalian", "Sisa Waktu", "Dikembalikan Pada", "Denda"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelPeminjaman);
        if (tabelPeminjaman.getColumnModel().getColumnCount() > 0) {
            tabelPeminjaman.getColumnModel().getColumn(0).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(1).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(2).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(3).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(3).setPreferredWidth(20);
            tabelPeminjaman.getColumnModel().getColumn(4).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(4).setPreferredWidth(20);
            tabelPeminjaman.getColumnModel().getColumn(5).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(5).setPreferredWidth(10);
            tabelPeminjaman.getColumnModel().getColumn(6).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(7).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(8).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(8).setPreferredWidth(30);
            tabelPeminjaman.getColumnModel().getColumn(9).setResizable(false);
            tabelPeminjaman.getColumnModel().getColumn(10).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Search By NIM                :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Search By ID Transaksi    :");

        searchReqBuku.setText("Search");
        searchReqBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchReqBukuActionPerformed(evt);
            }
        });

        tombolAddBuku.setBackground(new java.awt.Color(0, 204, 204));
        tombolAddBuku.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tombolAddBuku.setForeground(new java.awt.Color(255, 255, 255));
        tombolAddBuku.setText("Tambah Buku");
        tombolAddBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolAddBukuActionPerformed(evt);
            }
        });

        tombolAddBuku1.setBackground(new java.awt.Color(0, 204, 204));
        tombolAddBuku1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        tombolAddBuku1.setForeground(new java.awt.Color(255, 255, 255));
        tombolAddBuku1.setText("Hapus Anggota");
        tombolAddBuku1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolAddBuku1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(735, 735, 735)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1263, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tombolAddBuku1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tombolAddBuku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(requestPeminjamanBuku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(tombolRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(tombolLogoutAdmin)
                            .addComponent(searchReqBuku)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(searchByNim, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(searchByIDTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(151, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tombolRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(requestPeminjamanBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tombolAddBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tombolAddBuku1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(searchByNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(searchByIDTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchReqBuku)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                .addComponent(tombolLogoutAdmin)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tombolLogoutAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolLogoutAdminActionPerformed
        // TODO add your handling code here:
        dispose();
        try{
            TimeUnit.SECONDS.sleep(1);
        }catch(InterruptedException a){
            a.printStackTrace();
        }
        if(this.log == null){
            this.log = new Login();
        }
        this.log.setVisible(true);
        
    }//GEN-LAST:event_tombolLogoutAdminActionPerformed

    private void requestPeminjamanBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestPeminjamanBukuActionPerformed
        // TODO add your handling code here:
        if(this.reqBukuAdmin == null){
            this.reqBukuAdmin = new RequestBukuAdmin();
        }
        this.reqBukuAdmin.setVisible(true);
    }//GEN-LAST:event_requestPeminjamanBukuActionPerformed

    private void searchReqBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchReqBukuActionPerformed
        // TODO add your handling code here:
        this.getTabelPeminjaman = (DefaultTableModel) tabelPeminjaman.getModel();
        this.getTabelPeminjaman.setRowCount(0);
        if(this.searchByNim.getText().isBlank() && this.searchByIDTransaksi.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Mohon tidak mengosongkan input");
        }else if(!this.searchByNim.getText().isBlank() && this.searchByIDTransaksi.getText().isBlank()){
            try{
                this.st = this.dbConnection.getConnection().createStatement();
                String query2 = String.format("select * from request_peminjaman where nim = \"%s\" order by id_request desc;",this.searchByNim.getText());
                this.rs = st.executeQuery(query2);
                while(this.rs.next()){
                    System.out.println("Oleh NIM");
                    getTabelPeminjaman.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }else if(!this.searchByIDTransaksi.getText().isBlank() && this.searchByNim.getText().isBlank()){
            try{
                this.st = this.dbConnection.getConnection().createStatement();
                String query2 = String.format("select * from request_peminjaman where id_transaksi = \"%s\" order by id_request desc;",this.searchByIDTransaksi.getText());
                this.rs = st.executeQuery(query2);
                while(this.rs.next()){
                    System.out.println("yang Ditolak");
                    getTabelPeminjaman.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }else {
            try{
                this.st = this.dbConnection.getConnection().createStatement();
                String query2 = String.format("select * from data_transaksi where id_transaksi = \"%s\" and nim = \"%s\" order by id_request desc;",this.searchByIDTransaksi.getText(), this.searchByNim.getText());
                this.rs = st.executeQuery(query2);
                while(this.rs.next()){
                    System.out.println("yang Ditolak");
                    getTabelPeminjaman.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
                }
            }catch(SQLException e){
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_searchReqBukuActionPerformed

    private void tombolRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolRefreshActionPerformed
        // TODO add your handling code here:
        try{
            this.st = dbConnection.getConnection().createStatement();
                String query1 = """
                                UPDATE data_transaksi SET sisa_waktu = CASE 
                                WHEN TIMESTAMPDIFF(SECOND, NOW(), tanggal_pengembalian) = 0 THEN CONCAT('0 detik')
                                WHEN TIMESTAMPDIFF(MINUTE, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(SECOND, NOW(), tanggal_pengembalian), ' detik')
                                WHEN TIMESTAMPDIFF(HOUR, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(MINUTE, NOW(), tanggal_pengembalian), ' menit')
                                WHEN TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, NOW(), tanggal_pengembalian), ' jam')
                                WHEN TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian) > 0 THEN CONCAT(TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian), ' hari')
                                ELSE CONCAT('Telat :', TIMESTAMPDIFF(day, tanggal_pengembalian, NOW()), ' hari')
                                END;""";
                st.executeUpdate(query1);
                String query2 = "select timestampdiff(day, tanggal_pengembalian, now()) as sisa_waktu_hari from data_transaksi;";
                ResultSet rs2 = st.executeQuery(query2);
                if(rs2.next()){
                    System.out.println(rs2.getString("sisa_waktu_hari"));
                    int telatHari = Integer.parseInt(rs2.getString("sisa_waktu_hari"));
                    if(telatHari > 0){
                        int jumlahDenda = telatHari * 1_000;
                        String kenaDenda = String.format("update data_transaksi set denda = \"%s\";",jumlahDenda);
                        this.st.executeUpdate(kenaDenda);
                    }else{
                        String kenaDenda = String.format("update data_transaksi set denda = \"0\";");
                        this.st.executeUpdate(kenaDenda);
                    }
                }
                String query3 = "select * from data_transaksi;";
                ResultSet rs3 = st.executeQuery(query3);
                this.getTabelPeminjaman.setRowCount(0);
                while(rs3.next()){
                    getTabelPeminjaman.addRow(new Object[]{rs3.getString("id_transaksi"), rs3.getString("id_request"),rs3.getString("nama"),rs3.getString("nim"), rs3.getString("id_buku"), rs3.getString("jumlah_buku_dipinjam"),rs3.getString("tanggal_peminjaman"),rs3.getString("tanggal_pengembalian"),rs3.getString("sisa_waktu"), rs3.getString("dikembalikan_pada"),rs3.getString("denda")});
                }
            
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_tombolRefreshActionPerformed

    private void tombolAddBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolAddBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tombolAddBukuActionPerformed

    private void tombolAddBuku1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolAddBuku1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tombolAddBuku1ActionPerformed
    
    void cekRequestData(){
        try{
            this.st = this.dbConnection.getConnection().createStatement();
            String query20 = String.format("select status_request from request_peminjaman where status_request = \"Diminta\";");
            this.rs = st.executeQuery(query20);
            if(rs.next()){
                System.out.println("Ada lho");
                requestPeminjamanBuku.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 0), 5));
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    void insertData(){
        try{
            this.st = this.dbConnection.getConnection().createStatement();
            String query2 = String.format("select status_request from request_peminjaman where status_request = \"Diminta\";");
            this.rs = st.executeQuery(query2);
        }catch(SQLException e){
            e.printStackTrace();
        }
    }

    
    void tampilkanData(){
        this.getTabelPeminjaman = (DefaultTableModel) tabelPeminjaman.getModel();
        try{
            this.st = dbConnection.getConnection().createStatement();
                String query1 = """
                                UPDATE data_transaksi SET sisa_waktu = CASE 
                                WHEN TIMESTAMPDIFF(SECOND, NOW(), tanggal_pengembalian) = 0 THEN CONCAT('0 detik')
                                WHEN TIMESTAMPDIFF(MINUTE, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(SECOND, NOW(), tanggal_pengembalian), ' detik')
                                WHEN TIMESTAMPDIFF(HOUR, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(MINUTE, NOW(), tanggal_pengembalian), ' menit')
                                WHEN TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, NOW(), tanggal_pengembalian), ' jam')
                                WHEN TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian) > 0 THEN CONCAT(TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian), ' hari')
                                ELSE CONCAT('Telat :', TIMESTAMPDIFF(DAY, tanggal_pengembalian, NOW()), ' hari')
                                END;""";
                st.executeUpdate(query1);
                String query2 = "select timestampdiff(day, tanggal_pengembalian, now()) as sisa_waktu_hari from data_transaksi;";
                ResultSet rs2 = st.executeQuery(query2);
                if(rs2.next()){
                    System.out.println(rs2.getString("sisa_waktu_hari"));
                    int telatHari = Integer.parseInt(rs2.getString("sisa_waktu_hari"));
                    if(telatHari > 0){
                        int jumlahDenda = telatHari * 1_000;
                        String kenaDenda = String.format("update data_transaksi set denda = \"%s\";",jumlahDenda);
                        this.st.executeUpdate(kenaDenda);
                    }else{
                        String kenaDenda = String.format("update data_transaksi set denda = \"0\";");
                        this.st.executeUpdate(kenaDenda);
                    }
                }
                String query3 = "select * from data_transaksi;";
                ResultSet rs3 = st.executeQuery(query3);
                while(rs3.next()){
                    getTabelPeminjaman.addRow(new Object[]{rs3.getString("id_transaksi"), rs3.getString("id_request"),rs3.getString("nama"),rs3.getString("nim"), rs3.getString("id_buku"), rs3.getString("jumlah_buku_dipinjam"),rs3.getString("tanggal_peminjaman"),rs3.getString("tanggal_pengembalian"),rs3.getString("sisa_waktu"), rs3.getString("dikembalikan_pada"),rs3.getString("denda")});
                }
            
        }catch(SQLException e){
            e.printStackTrace();
        }
        
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }
    

    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestPeminjamanBuku;
    private javax.swing.JTextField searchByIDTransaksi;
    private javax.swing.JTextField searchByNim;
    private javax.swing.JButton searchReqBuku;
    private javax.swing.JTable tabelPeminjaman;
    private javax.swing.JButton tombolAddBuku;
    private javax.swing.JButton tombolAddBuku1;
    private javax.swing.JButton tombolLogoutAdmin;
    private javax.swing.JButton tombolRefresh;
    // End of variables declaration//GEN-END:variables
}
