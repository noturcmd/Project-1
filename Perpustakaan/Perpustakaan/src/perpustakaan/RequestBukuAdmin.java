/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package perpustakaan;

import java.awt.Color;
import java.sql.*;
import javax.swing.ButtonGroup;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer_
 */
public class RequestBukuAdmin extends javax.swing.JFrame {
    private KoneksiDatabase dbConnection;
    ResultSet rs = null;
    Statement st = null;
    DefaultTableModel getTabelRequest;
    ButtonGroup buttonStatus = new ButtonGroup();

    /**
     * Creates new form RequestBukuAdmin
     */
    public RequestBukuAdmin() {
        dbConnection = KoneksiDatabase.getInstance();
        initComponents();
        this.buttonStatus.add(statusDiterima);
        this.buttonStatus.add(statusDitolak);
        addListRequest();
        getContentPane().setBackground(new Color(22, 77, 196));
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
    }
    
//    public static void main(String[] args) {
//        new RequestBukuAdmin().show();
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelReq = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        searchReqBuku = new javax.swing.JButton();
        searchByNim = new javax.swing.JTextField();
        searchByStatus = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        idReq = new javax.swing.JLabel();
        namaYangReq = new javax.swing.JLabel();
        nimYangReq = new javax.swing.JLabel();
        judulYangReq = new javax.swing.JLabel();
        statusYangReq = new javax.swing.JLabel();
        statusDiterima = new javax.swing.JRadioButton();
        statusDitolak = new javax.swing.JRadioButton();
        waktuReq = new javax.swing.JLabel();
        ubahRequest = new javax.swing.JButton();
        tombolRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Request Peminjaman Buku");
        setBackground(new java.awt.Color(0, 0, 255));
        setForeground(new java.awt.Color(0, 0, 204));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N
        jLabel1.setText("Request Peminjaman Buku");

        tabelReq.setBackground(new java.awt.Color(204, 204, 204));
        tabelReq.setForeground(new java.awt.Color(0, 102, 204));
        tabelReq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Request", "Nama", "Nim", "Judul Buku", "Status Request", "Waktu Request"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelReq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelReqMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelReq);
        if (tabelReq.getColumnModel().getColumnCount() > 0) {
            tabelReq.getColumnModel().getColumn(0).setResizable(false);
            tabelReq.getColumnModel().getColumn(0).setPreferredWidth(60);
            tabelReq.getColumnModel().getColumn(1).setResizable(false);
            tabelReq.getColumnModel().getColumn(2).setResizable(false);
            tabelReq.getColumnModel().getColumn(2).setPreferredWidth(10);
            tabelReq.getColumnModel().getColumn(3).setResizable(false);
            tabelReq.getColumnModel().getColumn(4).setResizable(false);
            tabelReq.getColumnModel().getColumn(4).setPreferredWidth(50);
            tabelReq.getColumnModel().getColumn(5).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 0));
        jLabel2.setText("Search By NIM                     :");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 0));
        jLabel3.setText("Search By Status Request    :");

        searchReqBuku.setText("Search");
        searchReqBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchReqBukuActionPerformed(evt);
            }
        });

        searchByNim.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 153, 0)));

        searchByStatus.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(255, 153, 0)));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 0));
        jLabel4.setText("ID Request    :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 0));
        jLabel5.setText("Nama            : ");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 0));
        jLabel6.setText("NIM              :");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 0));
        jLabel7.setText("Judul             :");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 0));
        jLabel8.setText("Status Req    :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 0));
        jLabel9.setText("Waktu Req    :");

        idReq.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        idReq.setForeground(new java.awt.Color(255, 204, 51));

        namaYangReq.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        namaYangReq.setForeground(new java.awt.Color(255, 204, 51));

        nimYangReq.setForeground(new java.awt.Color(255, 204, 51));

        judulYangReq.setForeground(new java.awt.Color(255, 204, 51));

        statusYangReq.setForeground(new java.awt.Color(255, 204, 51));

        statusDiterima.setText("Diterima");

        statusDitolak.setText("Ditolak");

        waktuReq.setForeground(new java.awt.Color(255, 204, 51));

        ubahRequest.setBackground(new java.awt.Color(0, 255, 255));
        ubahRequest.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ubahRequest.setForeground(new java.awt.Color(255, 255, 255));
        ubahRequest.setText("Ubah");
        ubahRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahRequestActionPerformed(evt);
            }
        });

        tombolRefresh.setBackground(new java.awt.Color(0, 255, 255));
        tombolRefresh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tombolRefresh.setForeground(new java.awt.Color(255, 255, 255));
        tombolRefresh.setText("Refresh");
        tombolRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tombolRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchByNim, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 765, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(statusDiterima)
                                .addGap(27, 27, 27)
                                .addComponent(statusDitolak)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(waktuReq, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel8)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(statusYangReq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(jLabel7)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(judulYangReq, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel6)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(nimYangReq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jLabel5)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(namaYangReq, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(ubahRequest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(tombolRefresh, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(idReq, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 128, Short.MAX_VALUE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchByStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(searchReqBuku)))
            .addGroup(layout.createSequentialGroup()
                .addGap(295, 295, 295)
                .addComponent(jLabel1)
                .addGap(271, 271, 271))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(idReq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(namaYangReq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(nimYangReq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(judulYangReq))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(statusYangReq))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(statusDiterima)
                            .addComponent(statusDitolak))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(waktuReq))
                        .addGap(18, 18, 18)
                        .addComponent(ubahRequest)
                        .addGap(14, 14, 14)
                        .addComponent(tombolRefresh)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(searchByNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(searchByStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchReqBuku)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchReqBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchReqBukuActionPerformed
        // TODO add your handling code here:
        this.getTabelRequest = (DefaultTableModel) tabelReq.getModel();
        this.getTabelRequest.setRowCount(0);
        if(this.searchByNim.getText().isBlank() && this.searchByStatus.getText().isBlank()){
            JOptionPane.showMessageDialog(this, "Mohon tidak mengosongkan input");
        }else if(!this.searchByNim.getText().isBlank() && this.searchByStatus.getText().isBlank()){
            try{
                    this.st = this.dbConnection.getConnection().createStatement();
                    String query2 = String.format("select * from request_peminjaman where nim = \"%s\" order by id_request desc;",this.searchByNim.getText());
                    this.rs = st.executeQuery(query2);
                    while(this.rs.next()){
                        System.out.println("Oleh NIM");
                        getTabelRequest.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
                    }
                }catch(SQLException e){
                    e.printStackTrace();
                }
        }else if(!this.searchByStatus.getText().isBlank() && this.searchByNim.getText().isBlank()){
                try{
                    this.st = this.dbConnection.getConnection().createStatement();
                    String query2 = String.format("select * from request_peminjaman where status_request = \"%s\" order by id_request desc;",this.searchByStatus.getText());
                    this.rs = st.executeQuery(query2);
                    while(this.rs.next()){
                        System.out.println("yang Ditolak");
                        getTabelRequest.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
                    }
                }catch(SQLException e){
                    e.printStackTrace();
                }
        }else {
            try{
                    this.st = this.dbConnection.getConnection().createStatement();
                    String query2 = String.format("select * from request_peminjaman where status_request = \"%s\" and nim = \"%s\" order by id_request desc;",this.searchByStatus.getText(), this.searchByNim.getText());
                    this.rs = st.executeQuery(query2);
                    while(this.rs.next()){
                        System.out.println("yang Ditolak");
                        getTabelRequest.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
                    }
                }catch(SQLException e){
                    e.printStackTrace();
                }
        }
    
    }//GEN-LAST:event_searchReqBukuActionPerformed

    private void tabelReqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelReqMouseClicked
        // TODO add your handling code here:
        int row = tabelReq.getSelectedRow();
        this.getTabelRequest = (DefaultTableModel) tabelReq.getModel();
        idReq.setText(getTabelRequest.getValueAt(row, 0).toString());
        namaYangReq.setText(getTabelRequest.getValueAt(row, 1).toString());
        nimYangReq.setText(getTabelRequest.getValueAt(row, 2).toString());
        judulYangReq.setText(getTabelRequest.getValueAt(row, 3).toString());
        statusYangReq.setText(getTabelRequest.getValueAt(row, 4).toString());
        waktuReq.setText(getTabelRequest.getValueAt(row, 5).toString());
    }//GEN-LAST:event_tabelReqMouseClicked

    private void ubahRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahRequestActionPerformed
        // TODO add your handling code here:
        try{
            if(this.idReq.getText().isBlank()){
                JOptionPane.showMessageDialog(this, "Mohon tidak mengosongkan input id");
            }else{
                if(!this.statusDiterima.isSelected() && !this.statusDitolak.isSelected()){
                JOptionPane.showMessageDialog(this, "Mohon tidak mengosongkan input status");
                }else if(this.statusDiterima.isSelected()){
                    Statement st1 = this.dbConnection.getConnection().createStatement();
                    String query2 = String.format("update request_peminjaman set status_request = \"%s\" where nim = \"%s\" and id_request = \"%s\";", this.statusDiterima.getText(), this.nimYangReq.getText(), this.idReq.getText());
                    st1.executeUpdate(query2);
                    JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
                    
                    String query3 = String.format("select * from request_peminjaman where status_request = \"Diterima\" and id_request = \"%s\";", this.idReq.getText());
                    ResultSet rs4 = this.st.executeQuery(query3);
                    if(rs4.next()){
                        String[] idACC = idReq.getText().split("REQ");
                        System.out.println("Apa ada isinya?");
                        System.out.println(idACC[idACC.length - 1]);
                        if(idACC.length > 0){
                            System.out.println("isinya lebih dari satu lho");
                            Statement st2 = this.dbConnection.getConnection().createStatement();
                            String queryAddPinjam = String.format("insert into data_transaksi (id_transaksi, id_request, nama, nim, id_buku, jumlah_buku_dipinjam, tanggal_pengembalian, denda) values (\"%s\", \"%s\",\"%s\",\"%s\",\"%s\",\"%s\", (curdate() + interval 5 day) + interval 16 hours, \"Belum lewat batas waktu\");", "ACC" + idACC[(idACC.length - 1)], rs4.getString("id_request"), rs4.getString("nama"), rs4.getString("nim"),rs4.getString("id_buku"), "1");
                            st2.executeUpdate(queryAddPinjam);
                            
                            String addSisaWaktu = """
                                UPDATE data_transaksi SET sisa_waktu = CASE 
                                WHEN TIMESTAMPDIFF(SECOND, NOW(), tanggal_pengembalian) = 0 THEN CONCAT('0 detik')
                                WHEN TIMESTAMPDIFF(MINUTE, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(SECOND, NOW(), tanggal_pengembalian), ' detik')
                                WHEN TIMESTAMPDIFF(HOUR, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(MINUTE, NOW(), tanggal_pengembalian), ' menit')
                                WHEN TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian) = 0 THEN CONCAT(TIMESTAMPDIFF(HOUR, NOW(), tanggal_pengembalian), ' jam')
                                WHEN TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian) > 0 THEN CONCAT(TIMESTAMPDIFF(DAY, NOW(), tanggal_pengembalian), ' hari')
                                ELSE CONCAT('Telat :', TIMESTAMPDIFF(DAY, tanggal_pengembalian, NOW()), ' hari')
                                END;""";
                            st2.executeUpdate(addSisaWaktu); 
                            Statement st3 = this.dbConnection.getConnection().createStatement();
                            String cekStok = String.format("select jumlah_tersedia from data_buku where id_buku = \"%s\"", rs4.getString("id_buku"));
                            ResultSet rs5 = st3.executeQuery(cekStok);
                            if(rs5.next()){
                                String updateStok = String.format("update data_buku set jumlah_tersedia = \"%s\" where id_buku = \"%s\"", String.valueOf(Integer.parseInt(rs5.getString("jumlah_tersedia")) - 1),rs4.getString("id_buku"));
                                st3.executeUpdate(updateStok);  
                            }
                        }
                        
                    }
                }else if(this.statusDitolak.isSelected()){
                    this.st = this.dbConnection.getConnection().createStatement();
                    String query2 = String.format("update request_peminjaman set status_request = \"%s\" where nim = \"%s\" and id_request = \"%s\";", this.statusDitolak.getText(),this.nimYangReq.getText(),this.idReq.getText());
                    st.executeUpdate(query2);
                    JOptionPane.showMessageDialog(this, "Data berhasil diubah!");
                }
            }
            
            
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_ubahRequestActionPerformed

    private void tombolRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tombolRefreshActionPerformed
        // TODO add your handling code here:
        idReq.setText("");
        namaYangReq.setText("");
        nimYangReq.setText("");
        judulYangReq.setText("");
        statusYangReq.setText("");
        waktuReq.setText("");
        buttonStatus.clearSelection();
//        this.statusDiterima.setSelected(false);
//        this.statusDitolak.setSelected(false);
        try{
            this.getTabelRequest.setRowCount(0);
            this.st = this.dbConnection.getConnection().createStatement();
            String query2 = String.format("select * from request_peminjaman order by id_request desc;");
            this.rs = st.executeQuery(query2);
            this.getTabelRequest = (DefaultTableModel) tabelReq.getModel();
            while(this.rs.next()){
                System.out.println("Ada datanya");
                getTabelRequest.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
            }
            
        }catch(SQLException e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_tombolRefreshActionPerformed

    void addListRequest(){
        try{
            this.st = this.dbConnection.getConnection().createStatement();
            String query2 = String.format("select * from request_peminjaman order by id_request desc;");
            this.rs = st.executeQuery(query2);
            this.getTabelRequest = (DefaultTableModel) tabelReq.getModel();
            while(this.rs.next()){
                System.out.println("Ada datanya");
                getTabelRequest.addRow(new Object[]{rs.getString("id_request"),rs.getString("nama"),rs.getString("nim"),rs.getString("judul_buku"),rs.getString("status_request"), rs.getString("waktu_request")});
            }
        }catch(SQLException e){
            e.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel idReq;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel judulYangReq;
    private javax.swing.JLabel namaYangReq;
    private javax.swing.JLabel nimYangReq;
    private javax.swing.JTextField searchByNim;
    private javax.swing.JTextField searchByStatus;
    private javax.swing.JButton searchReqBuku;
    private javax.swing.JRadioButton statusDiterima;
    private javax.swing.JRadioButton statusDitolak;
    private javax.swing.JLabel statusYangReq;
    private javax.swing.JTable tabelReq;
    private javax.swing.JButton tombolRefresh;
    private javax.swing.JButton ubahRequest;
    private javax.swing.JLabel waktuReq;
    // End of variables declaration//GEN-END:variables
}
